import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'com.android.application'
apply plugin: 'org.anarres.jarjar'
apply plugin: "com.github.johnrengelman.shadow"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "org.geysermc.geyser.android"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 103001 // Format 00.00.000    EG 1.0.1 -> 01.00.001 -> 0100001 -> 100001
        versionName "1.3.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def newName = outputFileName

                newName = newName.replace("app-", "${variant.mergedFlavor.applicationId}-")
                newName = newName.replace("-release", "-${variant.versionName}")
                newName = newName.replace("-debug", "-${variant.versionName}-debug")

                outputFileName = newName
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

    configurations {
        nnio
    }

    sourceSets {
        main {
            res.srcDirs = [
                'src/main/res',
                'src/main/res-locale'
            ]
        }
    }
}

repositories {
    mavenLocal()

    maven {
        url 'https://jitpack.io'
    }

    maven {
        url 'https://repo.opencollab.dev/maven-releases/'
    }

    maven {
        url 'https://repo.opencollab.dev/maven-snapshots/'
    }

    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

    mavenCentral()
}

task nnioJar (type: ShadowJar) {
    getArchiveClassifier().set('nnio')

    relocate 'org.lukhnos.nnio.file', 'java.nio.file'
    relocate 'org.lukhnos.nnio.channels', 'java.nio.channels'

    configurations = [project.configurations.nnio]
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.3'
    implementation 'androidx.navigation:navigation-ui:2.3.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.android.volley:volley:1.2.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation "com.fasterxml.jackson.core:jackson-databind:2.10.2"

    // Remove epoll, kqueue and fastutil from the protocol
    implementation('com.github.BedrockTogether:Protocol:f883229fa2') {
        exclude group: 'com.nukkitx.fastutil', module:'fastutil-common'
        exclude group: 'com.nukkitx.network', module:'raknet'
        exclude group: 'com.nukkitx.network', module:'common'
        exclude group: 'io.netty', module:'netty-transport-native-epoll'
        exclude group: 'io.netty', module:'netty-transport-native-kqueue'
    }

    // Include the updated common with the android fixes
    implementation 'com.nukkitx.network:common:1.6.26-20210217.205834-2'
    implementation 'com.nukkitx.network:raknet:1.6.26-20210217.205834-2'

    // Implement the cleaned fastutil manually to prevent the error on release builds
    implementation files("${buildDir}/jarjar/fastutil-cleaned.jar") { builtBy 'jarjar-repackage_fastutil-cleaned.jar' }

    // Remove the duplicate classes and include fastutil-common
    compileOnly jarjar.repackage('fastutil-cleaned.jar') {
        from 'com.nukkitx.fastutil:fastutil-common:8.5.2'

//        classDelete "it.unimi.dsi.fastutil.ints.IntIterator"
//        classDelete "it.unimi.dsi.fastutil.longs.LongIterator"
//        classDelete "it.unimi.dsi.fastutil.objects.ObjectIterator"
//        classDelete "it.unimi.dsi.fastutil.booleans.BooleanIterator"
//        classDelete "it.unimi.dsi.fastutil.bytes.ByteIterator"
//        classDelete "it.unimi.dsi.fastutil.doubles.DoubleIterator"
//        classDelete "it.unimi.dsi.fastutil.floats.FloatIterator"
    }

    // Load a remake of nnio to support earlier Android versions
    nnio 'com.github.rtm516:nnio:c7b291f4ca'
    implementation tasks.nnioJar.outputs.files

    // slf4j port for Android
    implementation 'org.slf4j:slf4j-android:1.7.30'
}